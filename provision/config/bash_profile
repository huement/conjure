# bash_profile
#
# Symlinked to the vagrant user's home directory. This loads
# the default .bashrc provided by the virtual machine, which in
# turn loads the .bash_aliases file that we provide. Use this
# bash_profile to set environment variables and such.

if [[ -d "/home/vagrant/log" ]]; then
  export APACHE_LOG_DIR="/home/vagrant/log";
fi


# if running bash
# include .bashrc if it exists
if [ -f "/home/vagrant/.bashrc" ]; then
    . "/home/vagrant/.bashrc"
fi
# include .bash_prompt if it exists
if [ -f "/home/vagrant/.bash_prompt" ]; then
    . "/home/vagrant/.bash_prompt"
fi

# Ruby
if [ -f "/etc/profile.d/rvm.sh" ]; then
  source /etc/profile.d/rvm.sh
fi
if [ -f "/usr/local/rvm/scripts/rvm" ]; then
  source /usr/local/rvm/scripts/rvm
fi

export GEM_HOME=/home/vagrant/.gem
export GEM_PATH=/home/vagrant/.gem


CSPATH=""
#PHPCS 2.x
if [ -f "/home/vagrant/phpcs/scripts/phpcs" ]; then
  CSPATH="/home/vagrant/phpcs/scripts/phpcs:"
fi

#PHPCS 3.x
if [ -f "/home/vagrant/phpcs/bin/phpcs" ]; then
  CSPATH="/home/vagrant/phpcs/bin/phpcs:"
fi


# Set the WP_TESTS_DIR path directory so that we can use phpunit inside
# plugins almost immediately.
export WP_TESTS_DIR=/home/vagrant/code/wordpress-default/public_html/tests/phpunit/
# Set the WP_CORE_DIR path so phpunit tests are run against WP trunk
export WP_CORE_DIR=/home/vagrant/code/wordpress-default/public_html/src/

# add autocomplete for grunt
# eval "$(grunt --completion=bash)"

# add autocomplete for wp-cli
if [ -f "/home/vagrant/.wp-cli/wp-completion.bash" ]; then
  source /home/vagrant/.wp-cli/wp-completion.bash
fi
# PHPCS path
export PATH="/usr/local/rvm/rubies/ruby-2.5.0/bin:./node_modules/.bin:/home/vagrant/.wp-cli/node_modules/.bin:vendor/bin:/home/vagrant/.composer/vendor/bin:/home/vagrant/scripts:/home/vagrant/bin:${CSPATH}${PATH}"

# nvm path
export NVM_DIR="/home/vagrant/config/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm
